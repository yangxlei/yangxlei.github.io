<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>白杨</title>
    <description>学以致用</description>
    <link>http://yangxlei.github.io</link>
    <atom:link href="http://yangxlei.github.iofeed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Thu, 28 Jan 2016 23:54:47 +0800</pubDate>
    <lastBuildDate>Thu, 28 Jan 2016 23:54:47 +0800</lastBuildDate>
    <generator>Jekyll v2.4.0</generator>
    
      <item>
        <title>对于App架构的一点想法</title>
        <description>&lt;p&gt;最近带领团队完成了一个项目的启动阶段。对于个人和团队来说，这一次的经历都与以往格外不同。&lt;/p&gt;

&lt;p&gt;半年前，我在知乎提了一个&lt;a href=&quot;https://www.zhihu.com/question/35382102?from=profile_question_card&quot;&gt;问题&lt;/a&gt;
&lt;code&gt;
移动app大型项目的开发流程是怎样的，如何推进版本迭代？
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;虽然也算带过团队做项目，但是做的东西都是比较小，按照需求迭代开发就足够了。对于一个大型项目，几十人乃至更多人的研发团队, 从开发到交付的流程，模式应该是怎样的？！&lt;/p&gt;

&lt;p&gt;这一次的经历，也算找到了一个自己的答案。&lt;/p&gt;

&lt;h4 id=&quot;section&quot;&gt;项目启动阶段, 我们能看到的东西是：&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;1) 四个月内必须完成整体项目&lt;/li&gt;
  &lt;li&gt;2）大致分为六七个子模块， 每个模块的需求量不亚于一个独立 App&lt;/li&gt;
  &lt;li&gt;3）尽快一个月内拿出一个初期基本可操作版本试用&lt;/li&gt;
  &lt;li&gt;4) App 团队人员总数， 两个端加起来不到十个人!&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-1&quot;&gt;各团队讨论之后形成的目标：&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;1) 每个大模块垂直划分为三到四期&lt;/li&gt;
  &lt;li&gt;2) 移动端团队不同的阶段同时支持优先级最高的几个模块&lt;/li&gt;
  &lt;li&gt;3) 每三天到一周有一个版本可以试用&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;what-fuck&quot;&gt;What Fuck!!!&lt;/h2&gt;

&lt;p&gt;在预启动阶段，预想到的第一个问题。 大家开发的流程怎么做! 以往的经验，做一个项目，三到五个人， 大家在一个仓库底下，互相提交代码， 大家都开发完才能生成一个版本。 但是现在不可以， 理想状态下，几个人正在开发上线第一个版本，另外几个人同时在开发第二个版本，互相之间不能有影响。&lt;/p&gt;

&lt;h5 id=&quot;git-&quot;&gt;第一步 基于 Git 拆仓库。&lt;/h5&gt;
&lt;p&gt;不同的模块都处于独立的仓库下，利用 Android Studio 的 Module， iOS 下的 CocoaPods，每个模块都做成 SDK 的形式，能够独立运行。
壳 App 只需要确定各个模块 SDK 版本，然后引入就可以了。&lt;/p&gt;

&lt;p&gt;仓库的分布，和模块的依赖如图:
&lt;img src=&quot;../../../../../imgs/git_repository.png&quot; alt=&quot;仓库分布图&quot; /&gt;&lt;/p&gt;

&lt;p&gt;基于这个仓库，负责不同模块的同学只需要关注他负责的模块所在的仓库即可，不会受其他模块的进度所影响。&lt;/p&gt;

&lt;h5 id=&quot;section-2&quot;&gt;第二步，为了让业务模块的开发只聚焦在业务层上，我们需要把非业务的基础服务都梳理完整，并且确定业务开发的流程。&lt;/h5&gt;
&lt;p&gt;让所有人写出来的代码只在业务需求上有区分，在代码逻辑的流程上是统一的。&lt;/p&gt;

&lt;p&gt;基于这个目标，团队的核心成员整体梳理并确定了项目基础框架，如下图所示：
&lt;img src=&quot;../../../../../imgs/天校架构图_fix.jpg&quot; alt=&quot;架构图&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1) 通过一年来的不断积累，我们已经拥有一套比较完整的各种功能的基础组件库, 构成了这个项目的基础服务层；&lt;/li&gt;
  &lt;li&gt;2) 业务模块层最关心的是数据。对数据的操作统一都放在 DataService 中处理。 而业务模块内是使用 MVVM， 还是 MVP 的开发模式，我并不关心。DataService 中再根据当前业务数据的形式，以及优化的角度，使用网络，KModel 缓存，DB 处理数据；(PS: 后来看到关于猿题库的一篇文章，发现与他们的 DataController 的概念类似。&lt;a href=&quot;http://www.cocoachina.com/ios/20160107/14911.html&quot;&gt;链接&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;3) Base Business 中封装了一些基础的业务模块。包含当前登陆用户的信息，设备信息，分享组件。以及模块间跳转的协议（PS：跳转协议使用 url schema 的形式，能够兼容内部跳转，以及从外部跳转。有点像阿里的&lt;a href=&quot;http://bluereader.org/article/118425898&quot;&gt;统跳协议&lt;/a&gt;, 但没阿里那么复杂。）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;后来看了 infoq 推得一遍关于微信 Android 客户端的架构演变的&lt;a href=&quot;http://www.infoq.com/cn/articles/wechat-android-app-architecture&quot;&gt;文章&lt;/a&gt;，发现我们现在的流程和微信的流程还是很类似的。&lt;/p&gt;

&lt;p&gt;当做完这些基础框架的东西之后，发现其实这就是开源项目的开发方式，通过 fork 仓库，修改，发起 merge request 提交。&lt;/p&gt;

&lt;p&gt;一个月来，包括后期加入的小伙伴，二十人左右的移动团队。 Android 和 iOS 两个平台，基本从零开始，建立起完整的基础框架，与设计团队建立起规范和样式库，完成第一期的需求开发，建立了 SDK 模块的版本发布工具， 壳工程的集成工具等。。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;为团队的战斗力点赞！&lt;/em&gt;&lt;/p&gt;

</description>
        <pubDate>Thu, 28 Jan 2016 00:00:00 +0800</pubDate>
        <link>http://yangxlei.github.io/%E6%8A%80%E8%83%BD/2016/01/28/%E5%AF%B9%E4%BA%8EApp%E6%9E%B6%E6%9E%84%E7%9A%84%E4%B8%80%E7%82%B9%E6%83%B3%E6%B3%95.html</link>
        <guid isPermaLink="true">http://yangxlei.github.io/%E6%8A%80%E8%83%BD/2016/01/28/%E5%AF%B9%E4%BA%8EApp%E6%9E%B6%E6%9E%84%E7%9A%84%E4%B8%80%E7%82%B9%E6%83%B3%E6%B3%95.html</guid>
        
        
        <category>技能</category>
        
      </item>
    
      <item>
        <title>Unix网络编程一</title>
        <description>&lt;h1 id=&quot;unix-&quot;&gt;Unix 网络编程第一天&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;http://baike.baidu.com/link?url=Dp5CQR4-uXNFTpWwkP_2sfyXgrhVxC3cvKTT8CCK1E3jD8lG0SW1NYiL5P0rJ7L9EF6t8l4tHOBI-6TdaXa0BakhK1-KSVuGWEVjOWQ13R7Cjsc1JEBse5NtZXaiLKlafe23OeuKk5eLEw9x2dxwu81aVuhxf0kpgRDplYnYs04cX7zyMpBYrKHBYGGF326G&quot;&gt;OSI 七层模型&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;客户端时间获取程序&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; 
&lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[])&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recvline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MAXLINE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt; 
  &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sockaddr_in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;err_quit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;usage a.out &amp;lt;IPAddress&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AF_INET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SOCK_STREAM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// socket 函数创建一个网际(AF_INET)字节流&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;err_sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;socket error&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;bzero&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sin_family&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AF_INET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 指定协议族&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sin_port&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;htons&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9090&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 指定连接的端口号&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inet_pton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AF_INET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sin_addr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 检验输入地址是否合法&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;err_quit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;inet_pton error for %s&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SA&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 发起连接&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;err_sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;connect error&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recvline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MAXLINE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;    
    &lt;span class=&quot;n&quot;&gt;recvline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;   
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fputs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;recvline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EOF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 将接受到得信息输出到标注输出中    &lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;err_sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;fputs error&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;   
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;err_sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;read error&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;section-1&quot;&gt;服务端返回时间程序&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;connfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sockaddr_in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MAXLINE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;time_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ticks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AF_INET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SOCK_STREAM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 创建忘记字节流 &lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;bzero&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sin_family&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AF_INET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sin_addr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s_addr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;htonl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;INADDR_ANY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 指定监听的地址为当前服务器任一网络接口地址&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sin_port&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;htons&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9090&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//  监听端口号&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;Bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SA&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//绑定服务器地址和 sock 对象&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;Listen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LISTENQ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 开启监听&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;connfd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Accept&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SA&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 接受输入&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;connfd = %d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;connfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;ticks&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;   
    &lt;span class=&quot;n&quot;&gt;snprintf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;%.24s&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ctime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ticks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 写入数据到缓存&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;strlen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 将缓存中的数据写给接受者&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;Close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 关闭客户端连接&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

</description>
        <pubDate>Mon, 09 Nov 2015 00:00:00 +0800</pubDate>
        <link>http://yangxlei.github.io/%E6%8A%80%E8%83%BD/2015/11/09/Unix%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B(%E4%B8%80).html</link>
        <guid isPermaLink="true">http://yangxlei.github.io/%E6%8A%80%E8%83%BD/2015/11/09/Unix%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B(%E4%B8%80).html</guid>
        
        
        <category>技能</category>
        
      </item>
    
      <item>
        <title>Mac开发工具</title>
        <description>&lt;h1 id=&quot;mac-&quot;&gt;整理个人使用 Mac 开发的一些工具&lt;/h1&gt;

&lt;h2 id=&quot;iterm2app&quot;&gt;终端 iTerm2.app&lt;/h2&gt;

&lt;p&gt;放弃系统自带的 terminal 吧。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;iTerm2 is a terminal emulator for Mac OS X that does amazing things.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;下载地址: &lt;a href=&quot;http://www.iterm2.com/&quot;&gt;iTerms&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;偏好设置中配一下自己喜欢的颜色方案。&lt;/p&gt;

&lt;p&gt;我的终端配置文件: &lt;a href=&quot;../../../../files/bashrc.dev&quot;&gt;.bashrc.dev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;下载文件，拷贝到当前用户根目录下&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;mv bash.dev .bash.dev&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;打开 .bashrc 文件， 增加一行&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; ~/.bashrc.dev&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;在终端下执行:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; ~/.bashrc&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;brew&quot;&gt;brew&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;http://brew.sh/index_zh-cn.html&quot;&gt;HomeBrew&lt;/a&gt; OS X 不可或缺的套件管理器&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;安装方法：打开终端，粘贴下面的命令&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;ruby -e &lt;span class=&quot;s2&quot;&gt;&amp;quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;安装完成之后，更新一下资源库:&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;brew update&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;meld&quot;&gt;meld&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;一个文本比较工具
安装方法：&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;brew install mebrew/x11/meld&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;xquartz&quot;&gt;Xquartz&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;The XQuartz project is an open-source effort to develop a version of the X.Org X Window System that runs on OS X. Together with supporting libraries and applications, it forms the X11.app that Apple has shipped with OS X since version 10.5.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;下载地址： &lt;a href=&quot;http://xquartz.macosforge.org/landing/&quot;&gt;Xquartz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;下载安装后重启电脑&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;git-&quot;&gt;Git 命令行&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;meld 和 Xquartz 是为了配合在终端下使用 Git. 
&lt;strong&gt;&lt;em&gt;首先，在 xcode 下同意许可协议.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;git-diff--&quot;&gt;git diff  工具&lt;/h3&gt;
&lt;p&gt;下载文件 &lt;a href=&quot;../../../../files/git_meld.sh&quot;&gt;git_meld.sh&lt;/a&gt; 放在当前用户根目录下.
修改文件执行权限：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/
chmod +x git_meld.sh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;配置 git diff 工具：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git config --global diff.external ~/git-meld.sh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;git-completion--tab-&quot;&gt;git completion 按 tab 键自动完成命令&lt;/h3&gt;
&lt;p&gt;下载文件&lt;a href=&quot;../../../../files/git_completion.sh&quot;&gt;git_completion.sh&lt;/a&gt; 放在当前用户根目录下.
同样修改执行权限：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/
chmod +x git_meld.sh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;git-prompt--git-&quot;&gt;git prompt 进入 Git 仓库，自动查看当前仓库所在的分支，状态&lt;/h3&gt;
&lt;p&gt;参考&lt;a href=&quot;https://github.com/magicmonty/bash-git-prompt&quot;&gt;bash-git-prompt&lt;/a&gt; 中使用 brew 方式安装。&lt;/p&gt;

&lt;h2 id=&quot;vim&quot;&gt;Vim&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;终端下的 Vim 配色方案&lt;/em&gt;
下载文件&lt;a href=&quot;../../../../files/vimrc&quot;&gt;.vimrc&lt;/a&gt; 放在当前用户根目录下
执行&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/
mv vimrc .vimrc&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;Android Studio 下的 Vim 插件 
在 Android Studio 偏好设置，插件管理中搜索 IdeaVim, 选择安装&lt;/em&gt; 
&lt;br /&gt;
&lt;em&gt;Xcode Vim 插件
下载仓库 &lt;a href=&quot;https://github.com/XVimProject/XVim&quot;&gt;XVim&lt;/a&gt;, 使用 xcode 打开运行。重启 xcode 即可。&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;IDE + VIM 结合简直就是神器&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;android-studio-&quot;&gt;Android Studio 快捷键配置&lt;/h2&gt;
&lt;p&gt;配置文件&lt;a href=&quot;../../../../files/Eclipse _Mac OS X_ copy.xml&quot;&gt;Eclipse &lt;em&gt;Mac OS X&lt;/em&gt; copy.xml&lt;/a&gt;
已调整好各个对应到 Eclipse 的快捷键,下载文件放在&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~/Library/Preferences/AndroidStudio1.2/keymaps 目录下&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;重启 Android Studio， 偏好设置中选择对应的配置文件。&lt;/strong&gt;&lt;/p&gt;

</description>
        <pubDate>Wed, 02 Sep 2015 00:00:00 +0800</pubDate>
        <link>http://yangxlei.github.io/%E5%B7%A5%E5%85%B7/2015/09/02/Mac%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%E7%AF%87.html</link>
        <guid isPermaLink="true">http://yangxlei.github.io/%E5%B7%A5%E5%85%B7/2015/09/02/Mac%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%E7%AF%87.html</guid>
        
        
        <category>工具</category>
        
      </item>
    
      <item>
        <title>Java 多线程</title>
        <description>&lt;h2 id=&quot;java-&quot;&gt;Java 多线程操作&lt;/h2&gt;

&lt;p&gt;现成从创建到消亡，要经历若干个状态。主要包括：创建(new), 就绪(runnable), 运行(running), 阻塞(blocked), 等待(waiting), time waiting, 消亡(dead);&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;imgs/Java线程状态.jpg&quot; alt=&quot;Java现成状态转换&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Mon, 24 Aug 2015 00:00:00 +0800</pubDate>
        <link>http://yangxlei.github.io/%E6%8A%80%E8%83%BD/2015/08/24/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B.html</link>
        <guid isPermaLink="true">http://yangxlei.github.io/%E6%8A%80%E8%83%BD/2015/08/24/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B.html</guid>
        
        
        <category>技能</category>
        
      </item>
    
      <item>
        <title>项目结构</title>
        <description>&lt;h2 id=&quot;android-&quot;&gt;Android 项目架构&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;工程目录结构&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;文件名, 目录&lt;/th&gt;
      &lt;th&gt;作用&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Constants 类&lt;/td&gt;
      &lt;td&gt;定义 App 中的常量，如 api 接口，host 等&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Application&lt;/td&gt;
      &lt;td&gt;在主进程中初始化相应的环境&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Activitys 目录&lt;/td&gt;
      &lt;td&gt;存放相应的界面类，需要根据需求模块建立子目录&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Fragments 目录&lt;/td&gt;
      &lt;td&gt;存放使用 Fragment 实现的界面，根据需求模块建立对应的子目录&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Adapter 目录&lt;/td&gt;
      &lt;td&gt;存放 List 对应的 Adapter， 应该与每个列表 Activity 对应名称&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Models 目录&lt;/td&gt;
      &lt;td&gt;对应的 Model 存放的目录。所有的 Model 必须继承自 Common 中的 IBaseModel&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;api 目录&lt;/td&gt;
      &lt;td&gt;按模块对接口进行分类&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Views&lt;/td&gt;
      &lt;td&gt;自定义的控件， 建议实现自定义控件时尽量考虑通用性，能够重复利用。可以的话，迁移到 Common 中&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;utils 自定义工具类&lt;/td&gt;
      &lt;td&gt;尽量采用 Common 中的工具类&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;EventBus&lt;/td&gt;
      &lt;td&gt;广播工具&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
</description>
        <pubDate>Wed, 19 Aug 2015 00:00:00 +0800</pubDate>
        <link>http://yangxlei.github.io/%E5%B7%A5%E4%BD%9C/2015/08/19/%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84.html</link>
        <guid isPermaLink="true">http://yangxlei.github.io/%E5%B7%A5%E4%BD%9C/2015/08/19/%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84.html</guid>
        
        
        <category>工作</category>
        
      </item>
    
      <item>
        <title>技能树</title>
        <description>&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;技能&lt;/td&gt;
      &lt;td&gt;描述&lt;/td&gt;
      &lt;td&gt;评分(满分10)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Android&lt;/td&gt;
      &lt;td&gt;应用层精通&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;iOS&lt;/td&gt;
      &lt;td&gt;语法过关，多线程特性，内存管理; 高级特性需要深入&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Swift&lt;/td&gt;
      &lt;td&gt;尽快学习&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;C++&lt;/td&gt;
      &lt;td&gt;了解基本语法及概念&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;熟悉基本语法、指针的使用，要用 C 语言做些项目深入巩固&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Lua&lt;/td&gt;
      &lt;td&gt;曾经也算会，忘了。 下次用 Lua 再搞个项目玩&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;NDK&lt;/td&gt;
      &lt;td&gt;很有意思&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Python&lt;/td&gt;
      &lt;td&gt;赶快学习!&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Linux&lt;/td&gt;
      &lt;td&gt;熟练使用命令行，需要深入了解系统原理&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Shell&lt;/td&gt;
      &lt;td&gt;也算会过，忘了&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

</description>
        <pubDate>Fri, 14 Aug 2015 00:00:00 +0800</pubDate>
        <link>http://yangxlei.github.io/%E6%8A%80%E8%83%BD/2015/08/14/%E6%88%91%E7%9A%84%E6%8A%80%E8%83%BD%E6%A0%91.html</link>
        <guid isPermaLink="true">http://yangxlei.github.io/%E6%8A%80%E8%83%BD/2015/08/14/%E6%88%91%E7%9A%84%E6%8A%80%E8%83%BD%E6%A0%91.html</guid>
        
        
        <category>技能</category>
        
      </item>
    
  </channel>
</rss>
